[tool.poetry]
name = "mcdm"
version = "0.1.0"
description = "A streamlit app to support multi-criteria decision making"
authors = ["Maurycy Blaszczak <mgblaszczak@gmail.com>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
streamlit = "^1.29.0"
pandas = "^2.1.3"

[tool.poetry.group.dev.dependencies]
ruff = "^0.4.10"
mypy = "^1.10.1"
pre-commit = "^3.7.1"
pandas-stubs = "^2.2.2.240603"
pytest = "^8.2.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
target-version = ["py312"]
line-length = 120
skip-string-normalization = true

[tool.ruff]
target-version = "py312"
line-length = 120
lint.select = [
    "A",
    "ARG",
    "B",
    "C",
    "DTZ",
    "E",
    "EM",
    "F",
    "FBT",
    "I",
    "ICN",
    "ISC",
    "N",
    "PLC",
    "PLE",
    "PLR",
    "PLW",
    "Q",
    "RUF",
    "S",
    "T",
    "TID",
    "UP",
    "W",
    "YTT",
]
lint.ignore = [
    # Allow non-abstract empty methods in abstract base classes
    "B027",
    # Allow boolean positional values in function calls, like `dict.get(... True)`
    "FBT003",
    # Ignore checks for possible passwords
    "S105",
    "S106",
    "S107",
    # Ignore complexity
    "C901",
    "PLR0911",
    "PLR0912",
    "PLR0913",
    "PLR0915",
    "D211",    # no-blank-line-before-class
    "D213",    # multi-line-summary-second-line`
    "ISC001",  # single-line-implicit-string-concatenation solved by formatter
    "N999",    # streamlit page titles
    "UP007",   # issues with streamlit
    "TID252",  # allow relative import for streamlit deployment
]
lint.unfixable = [
    # Don't touch unused imports
    "F401",
]

[tool.ruff.lint.isort]
known-first-party = ["fuzzy_numbers", "mcdm", "mcdm_app"]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.per-file-ignores]
# Tests can use magic values, assertions, and relative imports
"tests/**/*" = ["PLR2004", "S101", "TID252"]

"__init__.py" = ["F401", "PLC0414"]

[tool.pytest.ini_options]
pythonpath = "src"

[tool.mypy]
disallow_untyped_defs = true
disallow_any_unimported = true
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
# warn_unused_ignores = true
show_error_codes = true
warn_unreachable = true
warn_redundant_casts = true
no_implicit_reexport = true
